<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mybatis.mapper.MemberMapper">
	<resultMap type="com.test.finalproject.security.CustomUserDetail" id="userDetail">
		<id property="mid" column="mid"/>
		<result property="mpwd" column="mpwd"/>
		<result property="enabled" column="enabled"/>
		<collection property="authList" ofType="com.test.finalproject.vo.AuthoritiesVo">
			<result property="mid" column="mid"/>
			<result property="authority" column="authority"/>
		</collection>
	</resultMap>


	<insert id="addMember" parameterType="com.test.finalproject.vo.MemberVo">
		insert into member_m values(#{mid}, #{mpwd}, #{mname}, #{memail}, #{maddr}, #{mphone}, #{birth}, 1, '1', sysdate)
	</insert>
	
	<insert id="addAuth" parameterType="hashmap">
		insert into member_authorities values(#{mid}, #{authority})
	</insert>	
	
	<select id="getAuths" parameterType="string" resultMap="userDetail">
		select * from member_m m, member_authorities a
		where m.mid = a.mid and m.mid = #{mid}
	</select>

	<!-- 아이디 중복검사 -->
	<select id="idCheck" parameterType="string" resultType="int">
		select NVL(count(*),0) from member_m where mid=#{mid}
	</select>

	<!-- 회원 정보 변경 -->
	<update id="doMyinfo" parameterType="com.test.finalproject.vo.MemberVo">
		update member_m set mpwd=#{mpwd}, mname=#{mname}, memail=#{memail}, maddr=#{maddr}, mphone=#{mphone}
		where mid=#{mid} and mpwd=#{mpwd}
	</update>

	<!-- 이름과 전화번호로 아이디 찾기 -->
	<select id="findId" parameterType="hashMap" resultType="com.test.finalproject.vo.MemberVo">
		select * from member_m
		where mname=#{mname} and mphone=#{mphone}
	</select>

	<!-- 이름과 이메일로 아이디 찾기 -->
	<select id="findId2" parameterType="hashMap" resultType="com.test.finalproject.vo.MemberVo">
		select * from member_m
		where mname=#{mname} and memail=#{memail}
	</select>

	<!-- 새로운 비밀번호 입력(비밀번호 변경) -->
	<update id="changePwd" parameterType="com.test.finalproject.vo.MemberVo">
		update member_m
		set mpwd=#{mpwd}
		where memail=#{memail}
	</update>

	<!-- 비밀번호 찾기(아이디와 이메일) -->
	<select id="findPwd" parameterType="hashMap" resultType="com.test.finalproject.vo.MemberVo">
		select *
		from member_m
		where mid=#{mid} and memail=#{memail}
	</select>
	
	<!-- 비밀번호 찾기(아이디와 전화번호) -->
	<select id="findPwd2" parameterType="hashMap" resultType="com.test.finalproject.vo.MemberVo">
		select *
		from member_m
		where mid=#{mid} and mphone=#{mphone}
	</select>

	<!-- 아이디와 일치하는 회원 정보 가져오기 -->
	<select id="getInfo" parameterType="String" resultType="com.test.finalproject.vo.MemberVo">
		select *
		from member_m
		where mid=#{mid}
	</select>

	<!-- 회원탈퇴 -->
	<update id="withdrawal" parameterType="string" >
		update member_m
		set enabled = 0
		where mid = #{mid}
	</update>

	<sql id="search">
		<if test="field != null and field != ''">
			where ${field} like '%' || #{keyword} || '%' 
		</if>
	</sql>

	<!-- 마이페이지에 작성한 문의 글 출력 -->
	<select id="selectQuestion" parameterType="hashmap" resultType="com.test.finalproject.vo.MemberQnaVo">
	select * from
		(
     		select aa.*,rownum rnum from
    		(
				select * from qna where mid=#{mid}
				<include refid="search"/>	
				order by qnacode desc
     		)aa
	 <![CDATA[	) where rnum>=#{startRow} and rnum<=#{endRow} ]]>
	</select>

	<!-- 전체 글의 개수 -->
	<select id="count" resultType="int" parameterType="hashmap">
		select NVL(count(*),0) cnt from qna 
		where mid=#{mid}
		<include refid="search"/>
	</select>

<!-- 	문의 내역 상세보기 -->
	<select id="detatilQuestion" parameterType="hashmap" resultType="com.test.finalproject.vo.MemberQnaVo">
		select *
		from member_m m, qna q
		where m.mid=#{mid}	and q.qnacode=#{qnacode}
	</select>
	
	
	<!-- 전체 리뷰 글의 개수 -->
	<select id="reviewCount" resultType="int" parameterType="hashmap">
		select NVL(count(*),0) cnt from movie_review 
		where mid=#{mid}
		<include refid="search"/>
	</select>
	
<!-- 	내가 작성한 평점 보기 -->
	<select id="myReview" parameterType="hashmap" resultType="com.test.finalproject.vo.ReviewVo">
		select * 
		from movie_review
		where mid=#{mid}
		order by reviewcode asc
	</select>

</mapper>