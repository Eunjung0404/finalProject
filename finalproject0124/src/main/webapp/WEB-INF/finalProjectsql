DROP TABLE NOTE;
DROP TABLE QNA_COMMENT;
DROP TABLE QNA;
DROP TABLE PAYMENT;
DROP TABLE RESERVATION_SEAT;
DROP TABLE RESERVATION;
DROP TABLE SEAT_INFO;
DROP TABLE SCREEN_TIME;
DROP TABLE SEAT;
DROP TABLE SCREEN;
DROP TABLE THEATER_MOVE;
DROP TABLE ADMIN_AUTHORITIES;
DROP TABLE ADMIN_M;
DROP TABLE THEATER;
DROP TABLE MOVIE_REVIEW;
DROP TABLE MOVIE_IMG;
DROP TABLE MEMBER_AUTHORITIES;
DROP TABLE MEMBER_M;
DROP TABLE MOVIE_M;

--영화
CREATE TABLE MOVIE_M
(
  Moviecode NUMBER(10) PRIMARY KEY, 	--영화코드pk
  MOVIENAME VARCHAR2(30) NOT NULL, 		--이름
  RUNTIME NUMBER(10) NOT NULL,  		--상영시간 분으로?구롬varchar2
  DIRECTOR VARCHAR2(20) NOT NULL,		--감독
  GENRE VARCHAR2(20) NOT NULL,			--장르
  RATING VARCHAR2(20) NOT NULL,			--관람등급 
  COUNTRY VARCHAR2(20) NOT NULL,		--국가
  ACTORINFO VARCHAR2(50) NOT NULL,		--배우정보
  MOVIEIMG VARCHAR2(50) NOT NULL,		--대표이미지
  OPENDATE DATE NOT NULL,				--개봉일 
  STATE NUMBER(3) NOT NULL,				--영화 상태
  VIDEO VARCHAR2(50) NOT NULL			--예고편 주소
);

--회원
CREATE TABLE MEMBER_M
(
	MID VARCHAR2(100) PRIMARY KEY,		--회원아이디PK
	MPWD VARCHAR2(50) NOT NULL,			--패스워드
	MNAME VARCHAR2(20) NOT NULL,		--이름
    MEMAIL VARCHAR2(20) NOT NULL,       --이메일
	MADDR VARCHAR2(20),			        --주소
	MPHONE VARCHAR2(100) NOT NULL,		--핸드폰번호
	BIRTH DATE NOT NULL,                --생년월일
	MSTATE NUMBER(1) NOT NULL,			--회원상태(탈퇴)
    ENABLED CHAR(1) DEFAULT '1',
	REGDATE DATE DEFAULT SYSDATE		--회원가입일
);

-- 회원 권한
CREATE TABLE MEMBER_AUTHORITIES
(
    MID VARCHAR2(100) NOT NULL,
    AUTHORITY VARCHAR2(100) NOT NULL,
    CONSTRAINT FK_AUTHORITIES_MEMBER_M FOREIGN KEY(MID) REFERENCES MEMBER_M(MID)
);

--영화상세이미지 
CREATE TABLE MOVIE_IMG
(
 MIMGCODE NUMBER(10) PRIMARY KEY,	--영화이미지코드PK
 MOVIECODE NUMBER(10),				--영화코드FK
 IMGNAME VARCHAR2(20) NOT NULL,
 CONSTRAINT FK_MOVIECODE_IMG FOREIGN KEY(MOVIECODE) REFERENCES MOVIE_M(MOVIECODE)
);

--영화 리뷰테이블
CREATE TABLE MOVIE_REVIEW
(
   REVIEWCODE NUMBER(10) PRIMARY KEY, --리뷰번호(PK)
   MOVIECODE NUMBER(10),			--영화코드(FK)
   MID VARCHAR2(100), 				--회원아이디(FK)
   SCORE NUMBER(5) NOT NULL,		--별점
   COMMENTS VARCHAR2(100) NOT NULL,	--리뷰내용
   REGDATE DATE NOT NULL, 			--작성일
   CONSTRAINT FK_MOVIECODE_REVIEW FOREIGN KEY(MOVIECODE) REFERENCES MOVIE_M(MOVIECODE),
   CONSTRAINT FK_MID_REVIEW FOREIGN KEY(MID) REFERENCES MEMBER_M(MID)
 );
 
 --극장테이블
 CREATE TABLE THEATER
(
    THEATERCODE NUMBER(10) PRIMARY KEY,	--극장코드 PK
    THEATERNAME VARCHAR2(10) NOT NULL,	-- 극장이름
    AREA VARCHAR2(20) NOT NULL,			-- 극장지역(위치)
    STATE NUMBER(3) NOT NULL			--상태
  
);

--관리자
CREATE TABLE ADMIN_M
(
	AID VARCHAR2(20) PRIMARY KEY,	--관리자아이디PK
	APWD VARCHAR2(50) NOT NULL,		--비밀번호
	ALEVEL NUMBER(1) NOT NULL,		--관리자 등급
    THEATERNAME VARCHAR2(100),
	REGDATE DATE DEFAULT SYSDATE,	--계정생성일
    AUTHORITY VARCHAR(100)
);

-- 관리자 권한
CREATE TABLE ADMIN_AUTHORITIES
(
    AID VARCHAR2(100) NOT NULL,
    AUTHORITY VARCHAR2(100) NOT NULL,
    CONSTRAINT FK_AUTHORITIES_ADMIN FOREIGN KEY(AID) REFERENCES ADMIN_M(AID)
);

--극장영화테이블
CREATE TABLE THEATER_MOVE
(
   TMOVECODE NUMBER(10) PRIMARY KEY, 	--(PK)
   THEATERCODE NUMBER(10),				--극장코드(FK)
   MOVIECODE NUMBER(10),				--영화코드(FK)
   STARTDATE DATE NOT NULL,				--상영시작일
   ENDDATE DATE NOT NULL,				--상영종료일
   STATE NUMBER(3) NOT NULL,				--상태
   CONSTRAINT FK_THEATERCODE_TMOVIE FOREIGN KEY(THEATERCODE) REFERENCES THEATER(THEATERCODE),
   CONSTRAINT FK_MOVIECODE_TMOVIE FOREIGN KEY(MOVIECODE) REFERENCES MOVIE_M(MOVIECODE)
);

--상영관테이블
CREATE TABLE SCREEN
(
   SCREENCODE NUMBER(10) PRIMARY KEY,	--상영관코드(PK)
   THEATERCODE NUMBER(10),				--극장코드(FK)
   NAME VARCHAR2(30) NOT NULL,			--상영관 이름
   STATE NUMBER(3) NOT NULL,			--상태
   SCREENTYPE VARCHAR2(20) NOT NULL, 	--상영관 타입(IMAX,2D등등)
   CONSTRAINT FK_THEATERCODE_SCREEN FOREIGN KEY(THEATERCODE) REFERENCES THEATER(THEATERCODE)
);

--좌석테이블
CREATE TABLE SEAT
(
   SEATCODE NUMBER(10) PRIMARY KEY,	--좌석코드(PK)
   SCREENCODE NUMBER(10), 			--상영관코드(FK)
   SEATROW VARCHAR2(10) NOT NULL,	--행
   SEATCOL VARCHAR2(10) NOT NULL,	--열
   CONSTRAINT FK_SCREENCODE_SEAT FOREIGN KEY(SCREENCODE) REFERENCES SCREEN(SCREENCODE)
);

--상영스캐쥴테이블
CREATE TABLE SCREEN_TIME
(
  TIMECODE NUMBER(10) PRIMARY KEY, 	--스케쥴코드(PK)
  SCREENCODE NUMBER(10), 			--상영관코드(FK)
  MOVIECODE NUMBER(10),				--영화코드(FK)
  STARTTIME VARCHAR2(20) NOT NULL,	--시작시간
  ENDTIME VARCHAR2(20) NOT NULL,	--종료시간
  EVENT VARCHAR2(20) NOT NULL,		--이벤트(시사회 등등)
  SCREENDATE DATE NOT NULL,			--상영일
  CONSTRAINT FK_SCREENCODE_TIME FOREIGN KEY(SCREENCODE) REFERENCES SCREEN(SCREENCODE),
  CONSTRAINT FK_MOVIECODE_TIME FOREIGN KEY(MOVIECODE) REFERENCES MOVIE_M(MOVIECODE)
);

--좌석예매여부테이블
CREATE TABLE SEAT_INFO
(
    INFOCODE NUMBER(10) PRIMARY KEY,	--번호(PK)
    SEATCODE NUMBER(10),				--좌석코드(FK)
    TIMECODE NUMBER(10),				--스케쥴코드(FK)
    STATE NUMBER(3) NOT NULL,			--예약상태
    CONSTRAINT FK_SEATCODE_INFO FOREIGN KEY(SEATCODE) REFERENCES SEAT(SEATCODE),
    CONSTRAINT FK_TIMECODE_INFO FOREIGN KEY(TIMECODE) REFERENCES SCREEN_TIME(TIMECODE)
);

--예매테이블
CREATE TABLE RESERVATION
(
   RESERVATIONCODE NUMBER(10) PRIMARY KEY, 	--예매번호(PK)
   MID VARCHAR2(100), 						--회원아이디(FK)
   TIMECODE NUMBER(10),						--스케쥴코드(FK)
   PEOPLE NUMBER(10) NOT NULL,				--관람인원
   MOVIENAME VARCHAR2(30) NOT NULL, 		--영화이름
   SCREENNAME VARCHAR2(30) NOT NULL,		--상영관 이름
   STATE NUMBER(3) NOT NULL, 				--상태/예매 완료/예매취소/관람완료 등등..
   CONSTRAINT FK_MID_RESERVATION FOREIGN KEY(MID) REFERENCES MEMBER_M(MID),
   CONSTRAINT FK_TIMECODE_RESERVATION FOREIGN KEY(TIMECODE) REFERENCES SCREEN_TIME(TIMECODE)
);

--예매좌석
CREATE TABLE RESERVATION_SEAT
(
    RSEATCODE NUMBER(10) PRIMARY KEY, 	--예매좌석번호(PK)
    RESERVATIONCODE NUMBER(10), 		--예매번호(PK)
    SEATNAME VARCHAR2(20) NOT NULL,		--예매좌석
    CONSTRAINT FK_RESERVATION_SEAT FOREIGN KEY(RESERVATIONCODE) REFERENCES RESERVATION(RESERVATIONCODE)
);

-- 결제
CREATE TABLE PAYMENT
(
 PAYMENTCODE NUMBER(10) PRIMARY KEY, 	--결제번호(PK)
 RESERVATIONCODE NUMBER(10),			--예매번호(FK)
 TOTALPRICE NUMBER(10) NOT NULL,		--총결제금액
 PAYMENTTYPE VARCHAR2(20) NOT NULL, 	--결제수단
 PAYMENTDATE DATE NOT NULL,				--결제일시
 CONSTRAINT FK_RESERVATION_PAYMENT FOREIGN KEY(RESERVATIONCODE) REFERENCES RESERVATION(RESERVATIONCODE)
);

--문의사항
CREATE TABLE QNA
(
   QNACODE NUMBER(10) PRIMARY KEY, 	--QNA글번호(PK)
   THEATERCODE NUMBER(10),			--극장코드(FK)
   MID VARCHAR2(100), 				--회원아이디(FK)
   PWD NUMBER(4) NOT NULL,			--글 비밀번호
   TITLE VARCHAR2(20) NOT NULL, 	--글제목
   CONTENT VARCHAR2(4000) NOT NULL, --글 내용
   REGDATE DATE DEFAULT SYSDATE, 	--작성일
   CONSTRAINT FK_THEATERCODE_QNA FOREIGN KEY(THEATERCODE) REFERENCES THEATER(THEATERCODE),
   CONSTRAINT FK_MID_QNA FOREIGN KEY(MID) REFERENCES MEMBER_M(MID)
);

--문의사항 COMMENT
CREATE TABLE QNA_COMMENT
(
    COMMENTCODE NUMBER(10) PRIMARY KEY, --댓글번호(PK)
    ID VARCHAR2(100), 					--글작성자 아이디
    QNACODE NUMBER(10), 				--QNA글번호(FK)
    CONTENT VARCHAR2(4000) NOT NULL, 	--글 내용
    REGDATE DATE DEFAULT SYSDATE, 		--작성일
    CONSTRAINT FK_QNACODE_QNACOMM FOREIGN KEY(QNACODE) REFERENCES QNA(QNACODE)
);

--공지사항
CREATE TABLE NOTE
(
   NOTECODE NUMBER(10) PRIMARY KEY, --공지사항글번호(PK)   
   THEATERCODE NUMBER(10),			--극장코드(FK)
   TITLE VARCHAR2(20) NOT NULL, 	--글제목
   CONTENT VARCHAR2(4000) NOT NULL, --글 내용
   REGDATE DATE DEFAULT SYSDATE, 	--작성일
   CONSTRAINT FK_THEATERCODE_NOTE FOREIGN KEY(THEATERCODE) REFERENCES THEATER(THEATERCODE)
);


--시퀀스
CREATE SEQUENCE SEQ_MOVIE_M INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE SEQUENCE SEQ_MOVIE_IMG INCREMENT BY 1 START WITH 1 NOCACHE;


commit;